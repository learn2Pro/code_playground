# 436. Find Right Interval
import bisect
from typing import List

'''
[[1,2]]
[[3,4],[2,3],[1,2]]
[ [1,4], [2,3], [3,4] ]
[]
[[1,3],[2,3],[3,4]]
[[-100,-98],[-99,-97],[-98,-96],[-97,-95],[-96,-94],[-95,-93],[-94,-92],[-93,-91],[-92,-90],[-91,-89],[-90,-88],[-89,-87],[-88,-86],[-87,-85],[-86,-84],[-85,-83],[-84,-82],[-83,-81],[-82,-80],[-81,-79],[-80,-78],[-79,-77],[-78,-76],[-77,-75],[-76,-74],[-75,-73],[-74,-72],[-73,-71],[-72,-70],[-71,-69],[-70,-68],[-69,-67],[-68,-66],[-67,-65],[-66,-64],[-65,-63],[-64,-62],[-63,-61],[-62,-60],[-61,-59],[-60,-58],[-59,-57],[-58,-56],[-57,-55],[-56,-54],[-55,-53],[-54,-52],[-53,-51],[-52,-50],[-51,-49],[-50,-48],[-49,-47],[-48,-46],[-47,-45],[-46,-44],[-45,-43],[-44,-42],[-43,-41],[-42,-40],[-41,-39],[-40,-38],[-39,-37],[-38,-36],[-37,-35],[-36,-34],[-35,-33],[-34,-32],[-33,-31],[-32,-30],[-31,-29],[-30,-28],[-29,-27],[-28,-26],[-27,-25],[-26,-24],[-25,-23],[-24,-22],[-23,-21],[-22,-20],[-21,-19],[-20,-18],[-19,-17],[-18,-16],[-17,-15],[-16,-14],[-15,-13],[-14,-12],[-13,-11],[-12,-10],[-11,-9],[-10,-8],[-9,-7],[-8,-6],[-7,-5],[-6,-4],[-5,-3],[-4,-2],[-3,-1],[-2,0],[-1,1],[0,2],[1,3],[2,4],[3,5],[4,6],[5,7],[6,8],[7,9],[8,10],[9,11],[10,12],[11,13],[12,14],[13,15],[14,16],[15,17],[16,18],[17,19],[18,20],[19,21],[20,22],[21,23],[22,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[31,33],[32,34],[33,35],[34,36],[35,37],[36,38],[37,39],[38,40],[39,41],[40,42],[41,43],[42,44],[43,45],[44,46],[45,47],[46,48],[47,49],[48,50],[49,51],[50,52],[51,53],[52,54],[53,55],[54,56],[55,57],[56,58],[57,59],[58,60],[59,61],[60,62],[61,63],[62,64],[63,65],[64,66],[65,67],[66,68],[67,69],[68,70],[69,71],[70,72],[71,73],[72,74],[73,75],[74,76],[75,77],[76,78],[77,79],[78,80],[79,81],[80,82],[81,83],[82,84],[83,85],[84,86],[85,87],[86,88],[87,89],[88,90],[89,91],[90,92],[91,93],[92,94],[93,95],[94,96],[95,97],[96,98],[97,99],[98,100],[99,101]]
[[-100,-92],[-99,-49],[-98,-24],[-97,-38],[-96,-65],[-95,-22],[-94,-49],[-93,-14],[-92,-68],[-91,-81],[-90,-49],[-89,-23],[-88,5],[-87,-44],[-86,2],[-85,-81],[-84,-56],[-83,-53],[-82,-41],[-81,-68],[-80,-76],[-79,-9],[-78,-68],[-77,-19],[-76,-15],[-75,-41],[-74,26],[-73,6],[-72,-55],[-71,-35],[-70,28],[-69,-42],[-68,-55],[-67,1],[-66,-55],[-65,-31],[-64,16],[-63,-13],[-62,18],[-61,-39],[-60,8],[-59,14],[-58,36],[-57,-20],[-56,30],[-55,-9],[-54,-25],[-53,39],[-52,43],[-51,7],[-50,-48],[-49,5],[-48,-39],[-47,-2],[-46,23],[-45,46],[-44,-19],[-43,54],[-42,-11],[-41,-37],[-40,-17],[-39,28],[-38,12],[-37,-12],[-36,-34],[-35,19],[-34,44],[-33,-24],[-32,-3],[-31,3],[-30,69],[-29,53],[-28,8],[-27,-13],[-26,40],[-25,-10],[-24,40],[-23,14],[-22,4],[-21,49],[-20,-4],[-19,76],[-18,12],[-17,-15],[-16,2],[-15,81],[-14,-8],[-13,-8],[-12,40],[-11,88],[-10,79],[-9,15],[-8,-2],[-7,76],[-6,47],[-5,62],[-4,13],[-3,35],[-2,37],[-1,44],[0,2],[1,99],[2,74],[3,32],[4,42],[5,64],[6,84],[7,105],[8,103],[9,14],[10,20],[11,43],[12,58],[13,89],[14,50],[15,114],[16,59],[17,117],[18,87],[19,32],[20,81],[21,79],[22,117],[23,32],[24,120],[25,94],[26,40],[27,58],[28,35],[29,92],[30,73],[31,97],[32,115],[33,86],[34,102],[35,57],[36,132],[37,50],[38,110],[39,41],[40,131],[41,73],[42,81],[43,101],[44,61],[45,136],[46,87],[47,127],[48,84],[49,56],[50,123],[51,150],[52,148],[53,73],[54,109],[55,79],[56,146],[57,118],[58,64],[59,86],[60,84],[61,68],[62,76],[63,134],[64,103],[65,160],[66,87],[67,112],[68,135],[69,104],[70,97],[71,166],[72,136],[73,112],[74,119],[75,166],[76,127],[77,137],[78,102],[79,127],[80,166],[81,99],[82,155],[83,123],[84,132],[85,171],[86,183],[87,173],[88,112],[89,110],[90,135],[91,160],[92,128],[93,109],[94,120],[95,130],[96,139],[97,109],[98,178],[99,152]]
'''


class _436_Solution:
    def findRightInterval(self, intervals: List[List[int]]) -> List[int]:
        if not intervals or not intervals[0]: return []
        lst = sorted([(lst[0], i) for i, lst in enumerate(intervals)])
        ans = []
        for interval in intervals:
            higher = bisect.bisect_right(lst, (interval[1],))
            ans.append(lst[higher][1] if higher < len(lst) else -1)
        return ans


if __name__ == '__main__':
    obj = _436_Solution()
    assert obj.findRightInterval(
        [[-100, -92], [-99, -49], [-98, -24], [-97, -38], [-96, -65], [-95, -22], [-94, -49], [-93, -14], [-92, -68],
         [-91, -81], [-90, -49], [-89, -23], [-88, 5], [-87, -44], [-86, 2], [-85, -81], [-84, -56], [-83, -53],
         [-82, -41], [-81, -68], [-80, -76], [-79, -9], [-78, -68], [-77, -19], [-76, -15], [-75, -41], [-74, 26],
         [-73, 6], [-72, -55], [-71, -35], [-70, 28], [-69, -42], [-68, -55], [-67, 1], [-66, -55], [-65, -31],
         [-64, 16], [-63, -13], [-62, 18], [-61, -39], [-60, 8], [-59, 14], [-58, 36], [-57, -20], [-56, 30], [-55, -9],
         [-54, -25], [-53, 39], [-52, 43], [-51, 7], [-50, -48], [-49, 5], [-48, -39], [-47, -2], [-46, 23], [-45, 46],
         [-44, -19], [-43, 54], [-42, -11], [-41, -37], [-40, -17], [-39, 28], [-38, 12], [-37, -12], [-36, -34],
         [-35, 19], [-34, 44], [-33, -24], [-32, -3], [-31, 3], [-30, 69], [-29, 53], [-28, 8], [-27, -13], [-26, 40],
         [-25, -10], [-24, 40], [-23, 14], [-22, 4], [-21, 49], [-20, -4], [-19, 76], [-18, 12], [-17, -15], [-16, 2],
         [-15, 81], [-14, -8], [-13, -8], [-12, 40], [-11, 88], [-10, 79], [-9, 15], [-8, -2], [-7, 76], [-6, 47],
         [-5, 62], [-4, 13], [-3, 35], [-2, 37], [-1, 44], [0, 2], [1, 99], [2, 74], [3, 32], [4, 42], [5, 64], [6, 84],
         [7, 105], [8, 103], [9, 14], [10, 20], [11, 43], [12, 58], [13, 89], [14, 50], [15, 114], [16, 59], [17, 117],
         [18, 87], [19, 32], [20, 81], [21, 79], [22, 117], [23, 32], [24, 120], [25, 94], [26, 40], [27, 58], [28, 35],
         [29, 92], [30, 73], [31, 97], [32, 115], [33, 86], [34, 102], [35, 57], [36, 132], [37, 50], [38, 110],
         [39, 41], [40, 131], [41, 73], [42, 81], [43, 101], [44, 61], [45, 136], [46, 87], [47, 127], [48, 84],
         [49, 56], [50, 123], [51, 150], [52, 148], [53, 73], [54, 109], [55, 79], [56, 146], [57, 118], [58, 64],
         [59, 86], [60, 84], [61, 68], [62, 76], [63, 134], [64, 103], [65, 160], [66, 87], [67, 112], [68, 135],
         [69, 104], [70, 97], [71, 166], [72, 136], [73, 112], [74, 119], [75, 166], [76, 127], [77, 137], [78, 102],
         [79, 127], [80, 166], [81, 99], [82, 155], [83, 123], [84, 132], [85, 171], [86, 183], [87, 173], [88, 112],
         [89, 110], [90, 135], [91, 160], [92, 128], [93, 109], [94, 120], [95, 130], [96, 139], [97, 109], [98, 178],
         [99, 152]]
    ) == [-1, 0, 1]
    assert obj.findRightInterval([[3, 4], [2, 3], [1, 2]]) == [-1, 0, 1]
